@using PagedList;
@using PagedList.Mvc;
@model IPagedList<UserRoles.Models.ItemsHire>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
@{ UserRoles.Models.ApplicationDbContext db = new UserRoles.Models.ApplicationDbContext();}
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

<h2>Index</h2>
<br />
<form asp-controller="ItemsHires" asp-action="Index">


    <p>You may search by Item Name</p>
    <input type="text" name="SearchString" />
    <input type="submit" value="Filter" />



</form>
<br />
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = Request.QueryString["searchString"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
<br />

@Html.ActionLink("Create New", "Create")

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().ProductName)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().ProductType.ProductCategory_Name)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Image)
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)

            </td>

            <td>
                @Html.DisplayFor(modelItem => item.ProductType.ProductCategory_Name)

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>

                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>




                @try
                {

                    var base64 = Convert.ToBase64String(item.Image);
                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                    <img src='@imgsrc' style="max-width:200px;max-height:200px" />


                }
                catch
                {
                    if (item.Image == null)
                    {
                        <img width="200" height="200" src="https://ixxidesign.azureedge.net/media/2388044/marcus-kraft-12-dont-worry-be-happy-white.jpg?mode=max&width=562&height=749" />
                    }
                }
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
            </td>
        </tr>
    }

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchString = Request.QueryString["searchString"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />